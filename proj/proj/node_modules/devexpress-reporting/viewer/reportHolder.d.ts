/**
* DevExpress HTML/JS Reporting (viewer\reportHolder.d.ts)
* Version:  24.1.7
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
/// <reference types="jquery" />
import { DxDeferred } from '@devexpress/analytics-core/analytics-internal-native';
import { ArrayPropertyChangedEventArgs, BaseRenderingModel, PropertyChangedEventArgs } from '@devexpress/analytics-core/analytics-serializer-native';
import { PreviewRequestWrapper } from './internal/_previewRequestWrapper';
import { IReportParametersInfo, ParametersPanelModelBase } from './parameters/parametersPanelModelBase';
import { IReportPreviewViewModel } from './reportPreview.viewModel';
import { IPreviewInitialize } from './utils/initializer';
export declare class ReportHolder extends BaseRenderingModel<IReportPreviewViewModel> {
    protected element?: Element;
    private _initializeDataPromise;
    private _openReportOperationDeferred;
    protected _deferreds: DxDeferred<any>[];
    protected _clearReportInfo(): void;
    constructor(handlerUri?: string, previewRequestWrapper?: PreviewRequestWrapper, element?: Element);
    onPropertyChanged(args: PropertyChangedEventArgs<ReportHolder> | ArrayPropertyChangedEventArgs<ReportHolder>): void;
    dispose(): void;
    closeReport(): void;
    deactivate(): void;
    openReport(reportName: string): PromiseLike<IPreviewInitialize>;
    initialize(initializeDataPromise: PromiseLike<IPreviewInitialize>): PromiseLike<IPreviewInitialize>;
    _getErrorMessage(jqXHR: JQuery.jqXHR): string;
    _processError(error: string, jqXHR?: JQuery.jqXHR, showForUser?: boolean, serverError?: string): void;
    _getToastMessageContainer(): Element;
    originalParametersInfo: IReportParametersInfo;
    reportId: string;
    reportUrl: string;
    previewParametersViewModel: ParametersPanelModelBase;
    requestWrapper: PreviewRequestWrapper;
    _closeReportRequests: {
        [key: string]: boolean;
    };
}
