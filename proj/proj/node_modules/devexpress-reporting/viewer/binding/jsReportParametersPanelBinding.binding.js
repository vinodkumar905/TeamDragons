/**
* DevExpress HTML/JS Reporting (viewer\binding\jsReportParametersPanelBinding.binding.js)
* Version:  24.1.7
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { DxAnalyticsComponentCommon } from '@devexpress/analytics-core/analytics-internal-native';
import { registerBaseBinding } from '@devexpress/analytics-core/analytics-widgets-internal-native';
import '@devexpress/analytics-core/analytics-internal';
import '@devexpress/analytics-core/analytics-widgets-internal';
import '@devexpress/analytics-core/analytics-utils';
import '@devexpress/analytics-core/analytics-elements';
import '@devexpress/analytics-core/analytics-widgets';
import { JSReportParametersPanelBinding as JSReportParametersPanelBinding } from './jsReportParametersPanelBinding';
import { useKoIntegration } from '@devexpress/analytics-core/analytics-internal';
import * as ko from 'knockout';
const dxReportParametersPanelBindingName = 'dxReportParametersPanel';
export class DxReportParametersPanel extends DxAnalyticsComponentCommon {
    constructor(_element, _options) {
        super(_element, _options);
        useKoIntegration();
    }
    getBindingName() {
        return dxReportParametersPanelBindingName;
    }
}
registerBaseBinding(dxReportParametersPanelBindingName, '$data');
ko.bindingHandlers[dxReportParametersPanelBindingName] = {
    init: function (element, valueAccessor) {
        new JSReportParametersPanelBinding(ko.unwrap(valueAccessor()) || {}).applyBindings(element);
        return { controlsDescendantBindings: true };
    }
};
