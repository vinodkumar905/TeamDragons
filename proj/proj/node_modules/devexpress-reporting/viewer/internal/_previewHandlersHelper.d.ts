/**
* DevExpress HTML/JS Reporting (viewer\internal\_previewHandlersHelper.d.ts)
* Version:  24.1.7
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { DxDeferred } from '@devexpress/analytics-core/analytics-internal-native';
import { ReportPreview } from '../reportPreview';
import { IGetPageResponse } from './_previewRequestWrapper';
export interface IProgressStatus {
    requestAgain?: boolean;
    completed?: boolean;
    progress?: number;
    error?: string;
}
export interface IExportProgressStatus extends IProgressStatus {
    token?: string;
    uri?: string;
}
export interface IDocumentBuildStatus extends IProgressStatus {
    pageCount?: number;
    firstPageResponse?: IGetPageResponse;
}
export declare class PreviewHandlersHelper {
    private _preview;
    constructor(preview: ReportPreview);
    doneStartExportHandler(deferred: DxDeferred<boolean>, inlineResult: boolean, response: string, exportOperationIdDeferred: DxDeferred<string>, startExportOperationId: string, useSameTab?: boolean, printable?: boolean, abortController?: AbortController): void;
    errorStartExportHandler(deferred: DxDeferred<boolean>, startExportOperationId: string): void;
    doneExportStatusHandler(deferred: DxDeferred<any>, operationId: string, response: IExportProgressStatus): void;
    errorExportStatusHandler(deferred: DxDeferred<IDocumentBuildStatus>, operationId: string): void;
    doneStartBuildHandler(deferred: DxDeferred<boolean>, response: {
        documentId: string;
    }, startBuildOperationId: string, doucmentIdDeferred: DxDeferred<string>): void;
    errorStartBuildHandler(deferred: DxDeferred<boolean>, startBuildOperationId: string): void;
    errorGetBuildStatusHandler(deferred: DxDeferred<IDocumentBuildStatus>): void;
    processPages(pageCount: number, stopProcessingPredicate: () => boolean): void;
    doneGetBuildStatusHandler(deferred: DxDeferred<IDocumentBuildStatus>, documentId: string, response: IDocumentBuildStatus, stopProcessingPredicate: () => boolean): void;
}
