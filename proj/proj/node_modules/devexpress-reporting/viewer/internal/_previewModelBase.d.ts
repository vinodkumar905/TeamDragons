/**
* DevExpress HTML/JS Reporting (viewer\internal\_previewModelBase.d.ts)
* Version:  24.1.7
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { IDesignerPart } from '@devexpress/analytics-core/analytics-internal-native';
import { ArrayPropertyChangedEventArgs, BaseRenderingModel, IViewModel, PropertyChangedEventArgs } from '@devexpress/analytics-core/analytics-serializer-native';
import { ParametersPanelModelBase } from '../parameters/parametersPanelModelBase';
import { ReportHolder } from '../reportHolder';
import { IPreviewInitialize } from '../utils/initializer';
export interface IPreviewDisposableModelBase {
    rootStyle: string | {
        [key: string]: boolean;
    };
    reportPreview: ReportHolder;
    parametersModel: ParametersPanelModelBase;
    rtl: boolean;
}
export interface IPreviewDisposableViewModelBase extends IViewModel {
    parts: IDesignerPart[];
    rootStyle: string | {
        [key: string]: boolean;
    };
    rtl: boolean;
}
export declare class PreviewDisposableModelBase extends BaseRenderingModel<IPreviewDisposableViewModelBase> {
    rootStyle: string | {
        [key: string]: boolean;
    };
    reportPreview: ReportHolder;
    parametersModel: ParametersPanelModelBase;
    rtl: boolean;
    viewPortCss: string;
    parts?: IDesignerPart[];
    constructor(options: IPreviewDisposableModelBase, viewPortCss?: string);
    onPropertyChanged(args: PropertyChangedEventArgs<any> | ArrayPropertyChangedEventArgs<any>): void;
    createViewModel(): IPreviewDisposableViewModelBase;
    updateViewModel(args: PropertyChangedEventArgs<any> | ArrayPropertyChangedEventArgs<any>): void;
    subscribeViewModelToDesignerParts(): void;
    OpenReport(reportName: string): PromiseLike<IPreviewInitialize>;
    GetParametersModel(): ParametersPanelModelBase;
    ResetParameters(): void;
    Close(): void;
    dispose(): void;
}
