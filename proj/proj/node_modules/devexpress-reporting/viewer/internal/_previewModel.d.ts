/**
* DevExpress HTML/JS Reporting (viewer\internal\_previewModel.d.ts)
* Version:  24.1.7
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ReportPreview } from '../reportPreview';
import { PreviewParametersPanelModel } from '../parameters/previewParametersModel';
import { ExportOptionsModel } from '../exportOptions/exportOptionsModel';
import { SearchViewModel } from '../search/_searchViewModel';
import { DocumentMapModel } from '../documentMap/_documentMapModel';
import { ActionLists } from './_actions';
import { TabPanel, DisposableType, ITabPanelViewModel } from '@devexpress/analytics-core/analytics-utils-native';
import { IDesignerPart, ToolbarKeyboardHelper } from '@devexpress/analytics-core/analytics-internal-native';
import { IDocumentOperationResult } from '../utils/utils';
import { IViewModel } from '@devexpress/analytics-core/analytics-serializer-native';
import { IReportPreviewViewModel } from '../reportPreview.viewModel';
import { IExportToolViewModel } from './_exportHandler.viewModel';
import { IActionListBaseViewModel } from '@devexpress/analytics-core/analytics-internal';
import { BreadcrumbModel, IBreadcrumbViewModel } from './_previewBreadcrumbs';
import { IPreviewDisposableModelBase, IPreviewDisposableViewModelBase, PreviewDisposableModelBase } from './_previewModelBase';
export interface IPreviewModelBase extends IPreviewDisposableModelBase {
    reportPreview: ReportPreview;
    parametersModel: PreviewParametersPanelModel;
    exportModel: ExportOptionsModel;
    searchModel: SearchViewModel;
    parts?: IDesignerPart[];
    updateSurfaceSize?: () => void;
    resizeCallback?: () => void;
}
export interface IPreviewModel extends IPreviewModelBase {
    documentMapModel: DocumentMapModel;
    tabPanel: TabPanel;
    actionLists: ActionLists;
    accessibilityCompliant: boolean;
    breadcrumb: BreadcrumbModel;
}
export interface IPreviewViewModelBase extends IPreviewDisposableViewModelBase {
    reportPreview: IReportPreviewViewModel;
    exportHandler: IExportToolViewModel;
}
export interface IPreviewViewModel extends IPreviewViewModelBase {
    toolBar: IToolbarViewModel;
    accessibilityCompliant: boolean;
    tabPanel: ITabPanelViewModel;
    breadcrumb: IBreadcrumbViewModel;
}
export interface IToolbarViewModel extends IViewModel {
    actionLists: IActionListBaseViewModel;
    keyboardHelper: ToolbarKeyboardHelper;
    canSwitchToDesigner: boolean;
}
export declare class PreviewDisposableModel extends PreviewDisposableModelBase implements IPreviewModelBase {
    reportPreview: ReportPreview;
    parametersModel: PreviewParametersPanelModel;
    exportModel: ExportOptionsModel;
    searchModel: SearchViewModel;
    resizeCallback?: () => void;
    updateSurfaceSize?: () => void;
    constructor(options: IPreviewModelBase);
    createViewModel(): IPreviewViewModelBase;
    _addDisposable(object: DisposableType): void;
    Print(pageIndex?: number): void;
    ExportTo(format: string, inlineResult?: boolean): void;
    GetCurrentPageIndex(): number;
    GoToPage(pageIndex: number): void;
    StartBuild(): void;
    PerformCustomDocumentOperation(customData?: string, hideMessageFromUser?: boolean): Promise<IDocumentOperationResult>;
}
export declare class PreviewModel extends PreviewDisposableModel implements IPreviewModel {
    documentMapModel: DocumentMapModel;
    tabPanel: TabPanel;
    actionLists: ActionLists;
    accessibilityCompliant: boolean;
    createViewModel(): IPreviewViewModel;
    constructor(options: IPreviewModel);
    breadcrumb: BreadcrumbModel;
    getViewModel: () => IPreviewViewModel;
}
