/**
* DevExpress HTML/JS Reporting (designer\utils\_registerCustomExpressions.js)
* Version:  24.1.7
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { functionDisplay, insertOrUpdateFunctions } from '@devexpress/analytics-core/analytics-widgets-internal';
import { expressionFunctions } from '@devexpress/analytics-core/queryBuilder-widgets-internal';
import { reportFunctionDisplay } from '../widgets/customFunctions';
import { extend } from '@devexpress/analytics-core/analytics-internal';
export function registerCustomGlobalExpressions(expressions) {
    if (!expressions?.length) {
        return;
    }
    expressions.forEach((expressionInfo) => {
        const expression = translateExpression(expressionInfo);
        insertOrUpdateFunctions(functionDisplay(), [extend(true, {}, expression)]);
        insertOrUpdateFunctions(expressionFunctions, [extend(true, {}, expression)]);
        insertOrUpdateFunctions(reportFunctionDisplay, [extend(true, {}, expression)]);
    });
}
export function registerCustomReportExpressions(expressions) {
    if (!expressions?.length) {
        return;
    }
    expressions.forEach((expressionInfo) => {
        const expression = translateExpression(expressionInfo);
        insertOrUpdateFunctions(reportFunctionDisplay, [expression]);
    });
}
const translateExpression = (expression) => {
    const editorText = `${expression.name}(${Array.from({ length: expression.maxOperandCount }, () => '').join(', ')})`;
    const editorPrefix = expression.category === 'Aggregate' ? '[].' : '';
    const categoryName = expression.category ?? 'Custom';
    return {
        display: categoryName,
        items: {
            [expression.name]: [{
                    paramCount: Math.max(expression.maxOperandCount, 0),
                    text: `${editorPrefix}${editorText}`,
                    displayName: editorText,
                    description: expression.description
                }],
        }
    };
};
