/**
* DevExpress HTML/JS Reporting (designer\localization\localizationService.d.ts)
* Version:  24.1.7
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
/// <reference types="jquery" />
import { DxDeferred } from '@devexpress/analytics-core/analytics-internal';
interface ITranslationResult {
    name: string;
    texts: string[];
}
declare class TranslationFactory {
    private _services;
    getFirstRegistered(): string;
    getTranslations(texts: string[], destinationLanguage: string): DxDeferred<ITranslationResult[]>;
    translate(name: string, texts: string[], destinationLanguage: string): import("@devexpress/analytics-core/analytics-internal").DxPromise<ITranslationResult>;
    register(name: string, service: ITranslationService): void;
    unregister(name: string): void;
}
export declare const _translationFactory: TranslationFactory;
export interface ITranslationService {
    onRequest: (texts: string[], destinationLanguage: string) => JQueryAjaxSettings;
    onResponse: (result: any) => string[];
}
export declare function registerTranslationService(name: string, service: ITranslationService): void;
export declare function unregisterTranslationService(name: string): void;
export {};
