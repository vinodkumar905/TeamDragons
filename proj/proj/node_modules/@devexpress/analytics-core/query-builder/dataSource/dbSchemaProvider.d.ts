/**
* DevExpress Analytics (query-builder\dataSource\dbSchemaProvider.d.ts)
* Version:  24.1.7
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { IItemsProvider, IDataMemberInfo } from '../../widgets/utils';
import { DBSchema } from './dbSchema';
import { DBTable } from './dbTable';
import { DBStoredProcedure } from './dbStoredProcedure';
import { Disposable } from '../../serializer/disposable';
import { SqlDataConnection } from './sql/sqlDataConnection';
import { RequestWrapper } from '../utils/requestwrapper';
import { IPathRequest } from '../../widgets/common/pathRequest';
import { DxPromise } from '../../core/utils/_jqueryUtils';
export interface IDBSchemaProvider extends IItemsProvider {
    getDbTable: (tableName: string, path?: string) => DxPromise<DBTable>;
    getDbSchema: () => DxPromise<any>;
    getDbTables?: () => DxPromise<any>;
    getDbViews?: () => DxPromise<any>;
    getDbStoredProcedures?: () => DxPromise<DBStoredProcedure[]>;
}
export declare class DBSchemaProvider extends Disposable implements IDBSchemaProvider {
    private _requestWrapper;
    private _dbSchema;
    private _dbTablesSchema;
    private _dbViewsSchema;
    private _dbStoredProceduresSchema;
    private _tables;
    private _tableRequests;
    connection: SqlDataConnection;
    private _getDBSchema;
    private _getDBStoredProcedures;
    constructor(connection: SqlDataConnection, _requestWrapper?: RequestWrapper);
    getDbViews(): DxPromise<DBSchema>;
    getDbTables(): DxPromise<DBSchema>;
    getItemByPath?: (path: IPathRequest) => DxPromise<IDataMemberInfo>;
    getValues?: (path: IPathRequest) => DxPromise<any[]>;
    getItems: (IPathRequest: any) => DxPromise<IDataMemberInfo[]>;
    getDbSchema(): DxPromise<DBSchema>;
    getDbStoredProcedures(): DxPromise<DBStoredProcedure[]>;
    getDbTable(tableName: string, fullPath?: string): DxPromise<DBTable>;
}
