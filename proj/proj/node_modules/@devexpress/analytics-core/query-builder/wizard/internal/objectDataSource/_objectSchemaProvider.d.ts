/**
* DevExpress Analytics (query-builder\wizard\internal\objectDataSource\_objectSchemaProvider.d.ts)
* Version:  24.1.7
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ObjectType } from '../../../dataSource/object/objectSchema';
import { IItemsProvider, IDataMemberInfo } from '../../../../widgets/utils';
import { RequestWrapper } from '../../../utils/requestwrapper';
import { Disposable } from '../../../../serializer/disposable';
import { IPathRequest } from '../../../../widgets/common/pathRequest';
import { DxPromise } from '../../../../core/utils/_jqueryUtils';
export declare class ObjectTypeDescriptions {
    types: ObjectType[];
    constructor(model: any);
}
export interface IObjectSchemaProvider extends IItemsProvider {
    getObjectTypeDescriptions: () => DxPromise<ObjectTypeDescriptions>;
}
export declare function getObjectTypeDescriptionsCallback(requestWrapper: RequestWrapper, context: string): DxPromise<ObjectTypeDescriptions>;
export declare class ObjectSchemaProvider extends Disposable implements IObjectSchemaProvider {
    private _requestWrapper;
    private _objectTypeDescriptionsPromise;
    constructor(_requestWrapper?: RequestWrapper);
    dispose(): void;
    getItems: (IPathRequest: any) => DxPromise<IDataMemberInfo[]>;
    getSchemaByPath(pathRequest: IPathRequest, objectSchema: ObjectTypeDescriptions): IDataMemberInfo[];
    getObjectTypeDescriptions(context?: string): DxPromise<ObjectTypeDescriptions>;
}
