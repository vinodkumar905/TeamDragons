/**
* DevExpress Analytics (core\internal\requestManager.js)
* Version:  24.1.7
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { FetchRequestManager } from './_fetchRequestManager';
import { isDefined } from './_isDefined';
import { AjaxRequestManager } from './_ajaxRequestManager';
let _requestManagerInstance = null;
export const requestManager = {
    getInstance: function (requestManagerSetup) {
        if (!_requestManagerInstance) {
            this._initialize(requestManagerSetup);
        }
        return _requestManagerInstance;
    },
    _initialize: function (requestManagerSetup) {
        const { ajaxSetup, fetchSetup } = requestManagerSetup ?? {};
        if (isDefined(ajaxSetup?.ajaxSettings) && isDefined(fetchSetup?.fetchSettings)) {
            throw new Error('You cannot configure more than one type of request manager. Use either ajaxSetup or fetchSetup for configuration, but not both.');
        }
        if (isDefined(ajaxSetup?.ajaxSettings)) {
            requestManager.initialize(new AjaxRequestManager(() => ajaxSetup.ajaxSettings));
            return;
        }
        requestManager.initialize(new FetchRequestManager(() => fetchSetup?.fetchSettings));
    },
    initialize: function (requestManagerInstance) {
        _requestManagerInstance = requestManagerInstance;
    }
};
export function _isFetchConfigured() {
    return _requestManagerInstance.useFetch;
}
