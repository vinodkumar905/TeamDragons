/**
* DevExpress Analytics (core\widgets\bordereditor\_bordereditor.d.ts)
* Version:  24.1.7
* Build date: Oct 28, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { Disposable } from '../../../serializer/disposable';
interface IEditorWithIconsOptions {
    value: ko.Observable<string>;
    disabled?: ko.Observable<boolean>;
    getModel?: () => IEditorWithIconsOptions;
}
export declare abstract class EditorWithIcons extends Disposable {
    abstract updateModel(value: string): any;
    protected preInitProperties(): void;
    constructor(object: IEditorWithIconsOptions);
    value: ko.Observable<string> | ko.Computed<string>;
    left: ko.Observable<boolean>;
    right: ko.Observable<boolean>;
    top: ko.Observable<boolean>;
    bottom: ko.Observable<boolean>;
    disabled: ko.Observable<boolean> | ko.Computed<boolean>;
}
export declare class BordersModel extends EditorWithIcons {
    private _setAllValues;
    setValue(name: any): void;
    setAll(): void;
    setNone(): void;
    updateModel(value: string): void;
    updateValue(): void;
}
export {};
